CPS526-01              Advanced Data Structures              Fall 2025

          Assignment #1: Postfix Form Expression Evaluation
                         (Due date: 9/9/2025)


I. The Input

   (1) All expressions are stored in a file called "in.dat".
       The file contains a sequence of arithmetic expressions in
       the postfix form, one per line. For example, the following 
       file has two expressions:

           2 a + b _ * ! c c ^ 15 / # - $
           value x + value y - != x y <= && $

       (There is a carriage-return at the end of the last expression.)

   (2) The values of variables in these expressions are read from
       the keyboard.


II. The Output

   Output data and related information are sent to the screen.
   Your program should do the following for each expression:

   (1) printing the expression before it is evaluated;
   (2) prompting the user to enter a value for each variable;
   (3) reporting the result, i.e., the value of the expression, or
       an error message.


III. Conventions

   (1) The length of an expression is unknown.
   (2) The number of expressions in "in.dat" is unknown.
   (3) There are at least one space to separate tokens, i.e.,     
       constants, variables, operators, and end marks.
   (4) All information after the end mark $ are ignored.
   (5) All constants and variables are considered as integers.
   (6) Your program can ask the value of a variable only once even
       though a variable occurs more than once in an expression.
   (7) false = 0;  true = 1.
   (8) The following are valid characters and their meanings:

       +, -, *, /    integer arithmetic operators 
                     (/ is integer division)
       _             unary negation
       !             factorial
       #             square root (x # = the largest integer y
                                        such that y*y <= x)
       ^             exponentiation (a b ^ = a raised to the power b)
       <, <=, >, >=  relational operators
       ==, !=        equality operators
       &&, ||        logical operators
       0,1,...,9     characters for constants
       a,b,...,z     characters for variables
       $             the end mark 

       Note that the boolean data type is compatible with the
       integer date type. Therefore, truth values (0/1) can 
       participate in integer operations, and any integer value 
       can be regarded as a truth value (zero/nonzero).


IV. An example

   The following is an example sequence of messages shown on the
   screen for the input data file given above. 

   [lik@wyvern PostfixExpression]$ java PostfixExpression

   Hello!  This is a postfix form expression calculator.

   The expression to be evaluated is 2 a + b _ * ! c c ^ 15 / # -

   Enter the value of a > 1
   Enter the value of b > -1
   Enter the value of c > 3

   The value of this expression is 5.

   The expression to be evaluated is value x + value y - != x y <= &&

   Enter the value of value > 15
   Enter the value of x > -10
   Enter the value of y > 10

   The value of this expression is 0.

   Bye-bye!

   [lik@wyvern PostfixExpression]$


V. Testing

   You need to make a testing data file which contains all kinds of 
   expressions to test your program thoroughly. It is a good exercise 
   to design a nice input file.
